import * as functions from 'firebase-functions';
import * as admin from 'firebase-admin';
import axios from 'axios';

const ZALO_API_URL = 'https://openapi.zalo.me/v2.0/oa/message';

interface ZaloMessage {
  partnerId: string;
  transactionType: 'IN' | 'OUT';
  vehicleNumber: string;
  productName: string;
  quantity: number;
  unit: string;
  total: number;
  createdAt: Date;
}

export const sendZaloMessage = functions.firestore
  .document('transactions/{transactionId}')
  .onCreate(async (snap, context) => {
    try {
      const transaction = snap.data();
      const partnerId = transaction.partnerId;

      // L·∫•y th√¥ng tin ƒë·ªëi t√°c
      const partnerSnap = await admin.firestore()
        .collection('partners')
        .doc(partnerId)
        .get();
      
      const partner = partnerSnap.data();
      if (!partner?.zaloPhone || partner.notificationPreference !== 'ZALO') {
        return null;
      }

      // Format tin nh·∫Øn
      const message = formatZaloMessage({
        partnerId,
        transactionType: transaction.type,
        vehicleNumber: transaction.vehicleNumber,
        productName: transaction.items[0].name,
        quantity: transaction.items[0].quantity,
        unit: transaction.items[0].unit,
        total: transaction.items[0].total,
        createdAt: transaction.createdAt.toDate()
      });

      // G·ª≠i tin nh·∫Øn qua Zalo API
      const response = await axios.post(
        ZALO_API_URL,
        {
          phone: partner.zaloPhone,
          message: message,
          // Th√™m c√°c tham s·ªë x√°c th·ª±c c·∫ßn thi·∫øt
        },
        {
          headers: {
            'Content-Type': 'application/json'
          }
        }
      );

      // L∆∞u l·ªãch s·ª≠ g·ª≠i tin nh·∫Øn
      await admin.firestore()
        .collection('notification_logs')
        .add({
          partnerId,
          transactionId: snap.id,
          channel: 'ZALO',
          message,
          status: response.data.success ? 'SUCCESS' : 'FAILED',
          error: response.data.error,
          createdAt: admin.firestore.FieldValue.serverTimestamp()
        });

      return response.data;
    } catch (error) {
      console.error('Error sending Zalo message:', error);
      throw error;
    }
  });

function formatZaloMessage(data: ZaloMessage): string {
  const type = data.transactionType === 'IN' ? 'Nh·∫≠p h√†ng' : 'Xu·∫•t h√†ng';
  const date = new Date(data.createdAt).toLocaleString('vi-VN');
  
  return `
HPS - Th√¥ng b√°o ${type}

üìÖ Ng√†y: ${date}
üöõ S·ªë xe: ${data.vehicleNumber}
üì¶ S·∫£n ph·∫©m: ${data.productName}
üìä S·ªë l∆∞·ª£ng: ${data.quantity} ${data.unit}
üí∞ Th√†nh ti·ªÅn: ${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.total)}

Vui l√≤ng ki·ªÉm tra th√¥ng tin v√† ph·∫£n h·ªìi n·∫øu c√≥ sai s√≥t.
Xin c·∫£m ∆°n!
  `.trim();
} 